{
    "type": [
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\nR version 4.0.0 (2020-04-24) -- \"Arbor Day\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "install.packages(\"ggstance\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/ggstance_0.3.4.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 247211 bytes (241 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 241 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/n_/ctfg3q6x6n5_zsl0q67tbml40000gn/T//Rtmp9Ogb0L/downloaded_packages\n",
        "> ",
        "rootdir <- system(\"git rev-parse --show-toplevel\", intern=TRUE)[1]",
        "> ",
        "lininterp <- function(x, id, t) {",
        "+ ",
        "  for (i in unique(id)) {",
        "+ ",
        "    xi <- x[id==i]",
        "+ ",
        "    ti <- t[id==i]",
        "+ ",
        "    xi[is.na(xi)] <- approx(ti[!is.na(xi)], xi[!is.na(xi)], ti[is.na(xi)])$y",
        "+ ",
        "    x[id==i] <- xi",
        "+ ",
        "  }",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "library(lfe)",
        "> ",
        "library(stargazer)",
        "> ",
        "library(knitr)",
        "> ",
        "library(plm)",
        "> ",
        "library(latex2exp)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggthemes)",
        "> ",
        "library(estimatr)",
        "> ",
        "library(gridExtra)",
        "> ",
        "library(grid)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(kableExtra)",
        "> ",
        "library(data.table)",
        "> ",
        "library(reshape2)",
        "> ",
        "",
        "> ",
        "sgtype <- opts_knit$get(\"rmarkdown.pandoc.to\")",
        "> ",
        "sgstyle <- 'default'",
        "> ",
        "colors <-  scale_color_solarized",
        "> ",
        "colors_fill <- scale_fill_solarized",
        "> ",
        "rootdir <- system(\"git rev-parse --show-toplevel\", intern=TRUE)[1]",
        "> ",
        "rootdir <- \"/Users/Hiro/Documents/GitHub/covid-impact\" ",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/R/exploratory.R\", sep=\"/\"))",
        "Loading data last updated on  2020-07-31 13:17:55 \nRun  /Users/Hiro/Documents/GitHub/covid-impact/cases_and_policies/R/cases_and_policies.R  to update data.\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Fri Jul 31 16:04:33 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00000 & 0.99993 & 0.99972 \\\\ \n  JHU & 0.99993 & 1.00000 & 0.99971 \\\\ \n  CTP & 0.99972 & 0.99971 & 1.00000 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation of cumulative cases \\label{tab:casecor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Fri Jul 31 16:04:33 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & 1 & 2 & 3 \\\\ \n  \\hline\nNYT & 1.00 & 0.23 & 0.31 \\\\ \n  JHU & 0.23 & 1.00 & 0.30 \\\\ \n  CTP & 0.31 & 0.30 & 1.00 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Portion of cumulative cases that are equal between data sets\\label{tab:casediff}} \n\\end{table}\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Fri Jul 31 16:04:34 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.89 & 0.85 \\\\ \n  JHU & 0.89 & 1.00 & 0.79 \\\\ \n  CTP & 0.85 & 0.79 & 1.00 \\\\ \n  Variance & 5.23 & 6.57 & 6.28 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of log daily new cases\\label{tab:newcasecor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Fri Jul 31 16:04:34 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.98 & 0.98 \\\\ \n  JHU & 0.98 & 1.00 & 0.97 \\\\ \n  CTP & 0.98 & 0.97 & 1.00 \\\\ \n  Variance & 3.79 & 3.99 & 3.55 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of log weekly new cases\\label{tab:weekcasecor}} \n\\end{table}\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Fri Jul 31 16:04:35 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.99 & 0.99 \\\\ \n  JHU & 0.99 & 1.00 & 0.98 \\\\ \n  CTP & 0.99 & 0.98 & 1.00 \\\\ \n  Variance & 183940.46 & 188236.24 & 130900.77 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of weekly deaths\\label{tab:weekdeathcor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Fri Jul 31 16:04:39 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rllll}\n  \\hline\n & N & Min & Median & Max \\\\ \n  \\hline\nState of emergency & 49 & 2020-02-29 & 2020-03-11 & 2020-03-16 \\\\ \n  Date closed K 12 schools & 49 & 2020-03-13 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed day cares & 14 & 2020-03-16 & 2020-03-23 & 2020-04-06 \\\\ \n  Date banned visitors to nursing homes & 29 & 2020-03-09 & 2020-03-16 & 2020-04-06 \\\\ \n  Closed non essential businesses & 41 & 2020-03-19 & 2020-03-25 & 2020-04-06 \\\\ \n  Closed restaurants except take out & 46 & 2020-03-15 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed gyms & 44 & 2020-03-16 & 2020-03-20 & 2020-04-03 \\\\ \n  Closed movie theaters & 47 & 2020-03-16 & 2020-03-21 & 2020-04-06 \\\\ \n  Stay at home  shelter in place & 40 & 2020-03-19 & 2020-03-28 & 2020-04-07 \\\\ \n  End relax stay at home shelter in place & 36 & 2020-04-24 & 2020-05-15 & 2020-06-19 \\\\ \n  Began to reopen businesses statewide & 48 & 2020-04-20 & 2020-05-06 & 2020-06-05 \\\\ \n  Reopen restaurants & 46 & 2020-04-24 & 2020-05-17 & 2020-06-22 \\\\ \n  Reopened gyms & 42 & 2020-04-24 & 2020-05-18 & 2020-07-03 \\\\ \n  Reopened movie theaters & 35 & 2020-04-27 & 2020-05-30 & 2020-07-03 \\\\ \n  Resumed elective medical procedures & 34 & 2020-04-20 & 2020-04-29 & 2020-05-29 \\\\ \n  Mandate face mask use by all individuals in public spaces & 30 & 2020-04-08 & 2020-06-22 & 2020-07-27 \\\\ \n  Mandate face mask use by employees in public facing businesses & 40 & 2020-04-03 & 2020-05-01 & 2020-07-03 \\\\ \n  Stop Initiation of Evictions overall or due to COVID related issues & 29 & 2020-03-16 & 2020-03-24 & 2020-05-30 \\\\ \n  Stop enforcement of evictions overall or due to COVID related issues & 27 & 2020-03-17 & 2020-03-24 & 2020-06-08 \\\\ \n  Renter grace period or use of security deposit to pay rent & 3 & 2020-04-10 & 2020-04-24 & 2020-05-20 \\\\ \n  Order freezing utility shut offs & 32 & 2020-03-12 & 2020-03-19 & 2020-04-13 \\\\ \n  Froze mortgage payments & 1 & 2020-03-21 & 2020-03-21 & 2020-03-21 \\\\ \n  Waived one week waiting period for unemployment insurance & 35 & 2020-03-08 & 2020-03-18 & 2020-04-06 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{State Policies \\label{tab:policies}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Fri Jul 31 16:04:39 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rllll}\n  \\hline\n & N & Min & Median & Max \\\\ \n  \\hline\nDate closed K 12 schools & 49 & 2020-03-13 & 2020-03-17 & 2020-04-03 \\\\ \n  Stay at home  shelter in place & 40 & 2020-03-19 & 2020-03-28 & 2020-04-07 \\\\ \n  Closed movie theaters & 47 & 2020-03-16 & 2020-03-21 & 2020-04-06 \\\\ \n  Closed restaurants except take out & 46 & 2020-03-15 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed non essential businesses & 41 & 2020-03-19 & 2020-03-25 & 2020-04-06 \\\\ \n  Mandate face mask use by employees & 40 & 2020-04-03 & 2020-05-01 & 2020-07-03 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{State Policies \\label{tab:policies_inreg}} \n\\end{table}\n",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/R/dataprep.R\",sep=\"/\"))",
        "Loading data last updated on  2020-07-31 13:17:55 \nRun  /Users/Hiro/Documents/GitHub/covid-impact/cases_and_policies/R/cases_and_policies.R  to update data.\n",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/varlabels.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/regprep.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/generatetables.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/bootstrap_felm.R\", sep=\"/\"))",
        "> ",
        "rearrange <- function(x, id) {",
        "+ ",
        "  for (i in unique(id)) {",
        "+ ",
        "    xi <- x[id==i]",
        "+ ",
        "    xi[!is.na(xi)] <- sort(xi[!is.na(xi)])",
        "+ ",
        "    x[id==i] <- xi",
        "+ ",
        "  }",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "dropnotincreasing <- function(x, id, t) {",
        "+ ",
        "  const <- (x <= panellag(x, id, t))",
        "+ ",
        "  const[is.na(const)] <- FALSE",
        "+ ",
        "  x[const & x>0] <- NA",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "lininterp <- function(x, id, t) {",
        "+ ",
        "  for (i in unique(id)) {",
        "+ ",
        "    xi <- x[id==i]",
        "+ ",
        "    ti <- t[id==i]",
        "+ ",
        "    xi[is.na(xi)] <- approx(ti[!is.na(xi)], xi[!is.na(xi)], ti[is.na(xi)])$y",
        "+ ",
        "    x[id==i] <- xi",
        "+ ",
        "  }",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "smoothtests <- function(x, id, t) {",
        "+ ",
        "  x[is.na(x)] <- 0",
        "+ ",
        "  return(lininterp(dropnotincreasing(rearrange(x,id),id,t),id,t))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "df$neg.interp <- smoothtests(df$negative, df$state, df$date)",
        "> ",
        "df$pos.interp <- df$cases #smoothtests(df$positive, df$state, df$date)",
        "> ",
        "df$tot.interp <- df$neg.interp + df$pos.interp",
        "> ",
        "",
        "> ",
        "L <- 7",
        "> ",
        "df$tests <- paneldiff(df$tot.interp, df$state, df$date, lag=L)",
        "> ",
        "df$testrate  <- df$tests/df$Population.2018*1000",
        "> ",
        "df$testrate[df$testrate<0] <- NA",
        "> ",
        "df$dlogtests <- paneldiff(log(sapply(df$testrate, function(x)",
        "+ ",
        "  max(x,exp(-1)))), df$state, df$date, lag=L)",
        "> ",
        "df$testratedc <- df$ddeath/df$dcases*df$testrate",
        "> ",
        "df$testratedc[df$dcases==0] <- 0",
        "> ",
        "",
        "> ",
        "df$tests.ma <- paneldiff(panelma(df$neg.interp, df$state, df$date, 7) + df$cases,",
        "+ ",
        "                         df$state, df$date, lag=L)",
        "> ",
        "df$testrate.ma  <- df$tests.ma/df$Population.2018*1000",
        "> ",
        "df$testrate.ma[df$testrate.ma<0] <- NA",
        "> ",
        "df$dlogtests.ma <- paneldiff(log(sapply(df$testrate.ma, function(x)",
        "+ ",
        "  max(x,exp(-1)))), df$state, df$date, lag=L)",
        "> ",
        "df$testratedc.ma <- df$ddeath/df$dcases*df$testrate.ma",
        "> ",
        "df$testratedc.ma[df$dcases==0] <- 0",
        "> ",
        "L<-14",
        "> ",
        "sprintf(\"lag(%s, %d)\", bvars, L)",
        "[1] \"lag(workplaces, 14)\" \"lag(retail, 14)\"     \"lag(grocery, 14)\"    \"lag(transit, 14)\"   \n",
        "> ",
        "",
        "> ",
        "library(lfe)",
        "> ",
        "library(stargazer)",
        "> ",
        "library(knitr)",
        "> ",
        "library(plm)",
        "> ",
        "library(latex2exp)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggthemes)",
        "> ",
        "library(estimatr)",
        "> ",
        "library(gridExtra)",
        "> ",
        "library(grid)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(kableExtra)",
        "> ",
        "library(data.table)",
        "> ",
        "library(reshape2)",
        "> ",
        "",
        "> ",
        "sgtype <- opts_knit$get(\"rmarkdown.pandoc.to\")",
        "> ",
        "sgstyle <- 'default'",
        "> ",
        "colors <-  scale_color_solarized",
        "> ",
        "colors_fill <- scale_fill_solarized",
        "> ",
        "rootdir <- system(\"git rev-parse --show-toplevel\", intern=TRUE)[1]",
        "> ",
        "rootdir <- \"/Users/Hiro/Documents/GitHub/covid-impact\" ",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/R/exploratory.R\", sep=\"/\"))",
        "Loading data last updated on  2020-07-31 13:17:55 \nRun  /Users/Hiro/Documents/GitHub/covid-impact/cases_and_policies/R/cases_and_policies.R  to update data.\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:46:04 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00000 & 0.99993 & 0.99972 \\\\ \n  JHU & 0.99993 & 1.00000 & 0.99971 \\\\ \n  CTP & 0.99972 & 0.99971 & 1.00000 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation of cumulative cases \\label{tab:casecor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:46:04 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & 1 & 2 & 3 \\\\ \n  \\hline\nNYT & 1.00 & 0.23 & 0.31 \\\\ \n  JHU & 0.23 & 1.00 & 0.30 \\\\ \n  CTP & 0.31 & 0.30 & 1.00 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Portion of cumulative cases that are equal between data sets\\label{tab:casediff}} \n\\end{table}\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:46:05 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.89 & 0.85 \\\\ \n  JHU & 0.89 & 1.00 & 0.79 \\\\ \n  CTP & 0.85 & 0.79 & 1.00 \\\\ \n  Variance & 5.23 & 6.57 & 6.28 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of log daily new cases\\label{tab:newcasecor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:46:05 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.98 & 0.98 \\\\ \n  JHU & 0.98 & 1.00 & 0.97 \\\\ \n  CTP & 0.98 & 0.97 & 1.00 \\\\ \n  Variance & 3.79 & 3.99 & 3.55 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of log weekly new cases\\label{tab:weekcasecor}} \n\\end{table}\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:46:05 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.99 & 0.99 \\\\ \n  JHU & 0.99 & 1.00 & 0.98 \\\\ \n  CTP & 0.99 & 0.98 & 1.00 \\\\ \n  Variance & 183940.46 & 188236.24 & 130900.77 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of weekly deaths\\label{tab:weekdeathcor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:46:08 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rllll}\n  \\hline\n & N & Min & Median & Max \\\\ \n  \\hline\nState of emergency & 49 & 2020-02-29 & 2020-03-11 & 2020-03-16 \\\\ \n  Date closed K 12 schools & 49 & 2020-03-13 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed day cares & 14 & 2020-03-16 & 2020-03-23 & 2020-04-06 \\\\ \n  Date banned visitors to nursing homes & 29 & 2020-03-09 & 2020-03-16 & 2020-04-06 \\\\ \n  Closed non essential businesses & 41 & 2020-03-19 & 2020-03-25 & 2020-04-06 \\\\ \n  Closed restaurants except take out & 46 & 2020-03-15 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed gyms & 44 & 2020-03-16 & 2020-03-20 & 2020-04-03 \\\\ \n  Closed movie theaters & 47 & 2020-03-16 & 2020-03-21 & 2020-04-06 \\\\ \n  Stay at home  shelter in place & 40 & 2020-03-19 & 2020-03-28 & 2020-04-07 \\\\ \n  End relax stay at home shelter in place & 36 & 2020-04-24 & 2020-05-15 & 2020-06-19 \\\\ \n  Began to reopen businesses statewide & 48 & 2020-04-20 & 2020-05-06 & 2020-06-05 \\\\ \n  Reopen restaurants & 46 & 2020-04-24 & 2020-05-17 & 2020-06-22 \\\\ \n  Reopened gyms & 42 & 2020-04-24 & 2020-05-18 & 2020-07-03 \\\\ \n  Reopened movie theaters & 35 & 2020-04-27 & 2020-05-30 & 2020-07-03 \\\\ \n  Resumed elective medical procedures & 34 & 2020-04-20 & 2020-04-29 & 2020-05-29 \\\\ \n  Mandate face mask use by all individuals in public spaces & 30 & 2020-04-08 & 2020-06-22 & 2020-07-27 \\\\ \n  Mandate face mask use by employees in public facing businesses & 40 & 2020-04-03 & 2020-05-01 & 2020-07-03 \\\\ \n  Stop Initiation of Evictions overall or due to COVID related issues & 29 & 2020-03-16 & 2020-03-24 & 2020-05-30 \\\\ \n  Stop enforcement of evictions overall or due to COVID related issues & 27 & 2020-03-17 & 2020-03-24 & 2020-06-08 \\\\ \n  Renter grace period or use of security deposit to pay rent & 3 & 2020-04-10 & 2020-04-24 & 2020-05-20 \\\\ \n  Order freezing utility shut offs & 32 & 2020-03-12 & 2020-03-19 & 2020-04-13 \\\\ \n  Froze mortgage payments & 1 & 2020-03-21 & 2020-03-21 & 2020-03-21 \\\\ \n  Waived one week waiting period for unemployment insurance & 35 & 2020-03-08 & 2020-03-18 & 2020-04-06 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{State Policies \\label{tab:policies}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:46:08 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rllll}\n  \\hline\n & N & Min & Median & Max \\\\ \n  \\hline\nDate closed K 12 schools & 49 & 2020-03-13 & 2020-03-17 & 2020-04-03 \\\\ \n  Stay at home  shelter in place & 40 & 2020-03-19 & 2020-03-28 & 2020-04-07 \\\\ \n  Closed movie theaters & 47 & 2020-03-16 & 2020-03-21 & 2020-04-06 \\\\ \n  Closed restaurants except take out & 46 & 2020-03-15 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed non essential businesses & 41 & 2020-03-19 & 2020-03-25 & 2020-04-06 \\\\ \n  Mandate face mask use by employees & 40 & 2020-04-03 & 2020-05-01 & 2020-07-03 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{State Policies \\label{tab:policies_inreg}} \n\\end{table}\n",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/R/dataprep.R\",sep=\"/\"))",
        "Loading data last updated on  2020-07-31 13:17:55 \nRun  /Users/Hiro/Documents/GitHub/covid-impact/cases_and_policies/R/cases_and_policies.R  to update data.\n",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/varlabels.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/regprep.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/generatetables.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/bootstrap_felm.R\", sep=\"/\"))",
        "> ",
        "rearrange <- function(x, id) {",
        "+ ",
        "  for (i in unique(id)) {",
        "+ ",
        "    xi <- x[id==i]",
        "+ ",
        "    xi[!is.na(xi)] <- sort(xi[!is.na(xi)])",
        "+ ",
        "    x[id==i] <- xi",
        "+ ",
        "  }",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "dropnotincreasing <- function(x, id, t) {",
        "+ ",
        "  const <- (x <= panellag(x, id, t))",
        "+ ",
        "  const[is.na(const)] <- FALSE",
        "+ ",
        "  x[const & x>0] <- NA",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "lininterp <- function(x, id, t) {",
        "+ ",
        "  for (i in unique(id)) {",
        "+ ",
        "    xi <- x[id==i]",
        "+ ",
        "    ti <- t[id==i]",
        "+ ",
        "    xi[is.na(xi)] <- approx(ti[!is.na(xi)], xi[!is.na(xi)], ti[is.na(xi)])$y",
        "+ ",
        "    x[id==i] <- xi",
        "+ ",
        "  }",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "smoothtests <- function(x, id, t) {",
        "+ ",
        "  x[is.na(x)] <- 0",
        "+ ",
        "  return(lininterp(dropnotincreasing(rearrange(x,id),id,t),id,t))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "df$neg.interp <- smoothtests(df$negative, df$state, df$date)",
        "> ",
        "df$pos.interp <- df$cases #smoothtests(df$positive, df$state, df$date)",
        "> ",
        "df$tot.interp <- df$neg.interp + df$pos.interp",
        "> ",
        "",
        "> ",
        "L <- 7",
        "> ",
        "df$tests <- paneldiff(df$tot.interp, df$state, df$date, lag=L)",
        "> ",
        "df$testrate  <- df$tests/df$Population.2018*1000",
        "> ",
        "df$testrate[df$testrate<0] <- NA",
        "> ",
        "df$dlogtests <- paneldiff(log(sapply(df$testrate, function(x)",
        "+ ",
        "  max(x,exp(-1)))), df$state, df$date, lag=L)",
        "> ",
        "df$testratedc <- df$ddeath/df$dcases*df$testrate",
        "> ",
        "df$testratedc[df$dcases==0] <- 0",
        "> ",
        "",
        "> ",
        "df$tests.ma <- paneldiff(panelma(df$neg.interp, df$state, df$date, 7) + df$cases,",
        "+ ",
        "                         df$state, df$date, lag=L)",
        "> ",
        "df$testrate.ma  <- df$tests.ma/df$Population.2018*1000",
        "> ",
        "df$testrate.ma[df$testrate.ma<0] <- NA",
        "> ",
        "df$dlogtests.ma <- paneldiff(log(sapply(df$testrate.ma, function(x)",
        "+ ",
        "  max(x,exp(-1)))), df$state, df$date, lag=L)",
        "> ",
        "df$testratedc.ma <- df$ddeath/df$dcases*df$testrate.ma",
        "> ",
        "df$testratedc.ma[df$dcases==0] <- 0",
        "> ",
        "",
        "> ",
        "DML2.for.PLM <- function(x, d, y, dreg, yreg, nfold=2) {",
        "+ ",
        "nobs <- nrow(x)",
        "+ ",
        "foldid <- rep.int(1:nfold,times = ceiling(nobs/nfold))[sample.int(nobs)]",
        "+ ",
        "I <- split(1:nobs, foldid)",
        "+ ",
        "ytil <- dtil <- rep(NA, nobs)",
        "+ ",
        "cat(\"fold: \")",
        "+ ",
        "#the following loop builds residuals over the folds",
        "+ ",
        "for(b in 1:length(I)){",
        "+ ",
        "dfit <- dreg(x[-I[[b]],], d[-I[[b]]]) #take a fold out",
        "+ ",
        "yfit <- yreg(x[-I[[b]],], y[-I[[b]]]) # take a folot out",
        "+ ",
        "dhat <- predict(dfit, x[I[[b]],], type=\"response\") #predict the fold out",
        "+ ",
        "yhat <- predict(yfit, x[I[[b]],], type=\"response\") #predict the fold out",
        "+ ",
        "dtil[I[[b]]] <- (d[I[[b]]] - dhat) #record residual",
        "+ ",
        "ytil[I[[b]]] <- (y[I[[b]]] - yhat) #record residial",
        "+ ",
        "cat(b,\" \")",
        "+ ",
        "}",
        "+ ",
        "rfit <- lm(ytil ~ dtil) #estimate the main parameter by regressing one residual on the other",
        "+ ",
        "coef.est <- coef(rfit)[2] #extract coefficient",
        "+ ",
        "se <- sqrt(vcovHC(rfit)[2,2]) #record standard error",
        "+ ",
        "cat(sprintf(\"\\ncoef (se) = %g (%g)\\n\", coef.est , se))",
        "+ ",
        "return( list(coef.est =coef.est , se=se, dtil=dtil, ytil=ytil) )",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "library(AER,hdm, randomForest)",
        "Error in library(AER, hdm, randomForest) : \n  object 'randomForest' not found\n",
        "> ",
        "install.packages(\"randomForest\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/randomForest_4.6-14.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 250517 bytes (244 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 244 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/n_/ctfg3q6x6n5_zsl0q67tbml40000gn/T//Rtmp9Ogb0L/downloaded_packages\n",
        "> ",
        "",
        "> ",
        "DML2.for.PLM <- function(x, d, y, dreg, yreg, nfold=2) {",
        "+ ",
        "nobs <- nrow(x)",
        "+ ",
        "foldid <- rep.int(1:nfold,times = ceiling(nobs/nfold))[sample.int(nobs)]",
        "+ ",
        "I <- split(1:nobs, foldid)",
        "+ ",
        "ytil <- dtil <- rep(NA, nobs)",
        "+ ",
        "cat(\"fold: \")",
        "+ ",
        "#the following loop builds residuals over the folds",
        "+ ",
        "for(b in 1:length(I)){",
        "+ ",
        "dfit <- dreg(x[-I[[b]],], d[-I[[b]]]) #take a fold out",
        "+ ",
        "yfit <- yreg(x[-I[[b]],], y[-I[[b]]]) # take a folot out",
        "+ ",
        "dhat <- predict(dfit, x[I[[b]],], type=\"response\") #predict the fold out",
        "+ ",
        "yhat <- predict(yfit, x[I[[b]],], type=\"response\") #predict the fold out",
        "+ ",
        "dtil[I[[b]]] <- (d[I[[b]]] - dhat) #record residual",
        "+ ",
        "ytil[I[[b]]] <- (y[I[[b]]] - yhat) #record residial",
        "+ ",
        "cat(b,\" \")",
        "+ ",
        "}",
        "+ ",
        "rfit <- lm(ytil ~ dtil) #estimate the main parameter by regressing one residual on the other",
        "+ ",
        "coef.est <- coef(rfit)[2] #extract coefficient",
        "+ ",
        "se <- sqrt(vcovHC(rfit)[2,2]) #record standard error",
        "+ ",
        "cat(sprintf(\"\\ncoef (se) = %g (%g)\\n\", coef.est , se))",
        "+ ",
        "return( list(coef.est =coef.est , se=se, dtil=dtil, ytil=ytil) )",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "library(AER,hdm, randomForest)",
        "Error in library(AER, hdm, randomForest) : \n  object 'randomForest' not found\n",
        "> ",
        "install.packages(\"randomForest\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/randomForest_4.6-14.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 250517 bytes (244 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 244 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/n_/ctfg3q6x6n5_zsl0q67tbml40000gn/T//Rtmp9Ogb0L/downloaded_packages\n",
        "> ",
        "",
        "> ",
        "library(lfe)",
        "> ",
        "library(stargazer)",
        "> ",
        "library(knitr)",
        "> ",
        "library(plm)",
        "> ",
        "library(latex2exp)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggthemes)",
        "> ",
        "library(estimatr)",
        "> ",
        "library(gridExtra)",
        "> ",
        "library(grid)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(kableExtra)",
        "> ",
        "library(data.table)",
        "> ",
        "library(reshape2)",
        "> ",
        "",
        "> ",
        "sgtype <- opts_knit$get(\"rmarkdown.pandoc.to\")",
        "> ",
        "sgstyle <- 'default'",
        "> ",
        "colors <-  scale_color_solarized",
        "> ",
        "colors_fill <- scale_fill_solarized",
        "> ",
        "rootdir <- system(\"git rev-parse --show-toplevel\", intern=TRUE)[1]",
        "> ",
        "rootdir <- \"/Users/Hiro/Documents/GitHub/covid-impact\" ",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/R/exploratory.R\", sep=\"/\"))",
        "Loading data last updated on  2020-07-31 13:17:55 \nRun  /Users/Hiro/Documents/GitHub/covid-impact/cases_and_policies/R/cases_and_policies.R  to update data.\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:47:06 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00000 & 0.99993 & 0.99972 \\\\ \n  JHU & 0.99993 & 1.00000 & 0.99971 \\\\ \n  CTP & 0.99972 & 0.99971 & 1.00000 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation of cumulative cases \\label{tab:casecor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:47:06 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & 1 & 2 & 3 \\\\ \n  \\hline\nNYT & 1.00 & 0.23 & 0.31 \\\\ \n  JHU & 0.23 & 1.00 & 0.30 \\\\ \n  CTP & 0.31 & 0.30 & 1.00 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Portion of cumulative cases that are equal between data sets\\label{tab:casediff}} \n\\end{table}\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:47:06 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.89 & 0.85 \\\\ \n  JHU & 0.89 & 1.00 & 0.79 \\\\ \n  CTP & 0.85 & 0.79 & 1.00 \\\\ \n  Variance & 5.23 & 6.57 & 6.28 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of log daily new cases\\label{tab:newcasecor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:47:06 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.98 & 0.98 \\\\ \n  JHU & 0.98 & 1.00 & 0.97 \\\\ \n  CTP & 0.98 & 0.97 & 1.00 \\\\ \n  Variance & 3.79 & 3.99 & 3.55 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of log weekly new cases\\label{tab:weekcasecor}} \n\\end{table}\n% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:47:07 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rrrr}\n  \\hline\n & NYT & JHU & CTP \\\\ \n  \\hline\nNYT & 1.00 & 0.99 & 0.99 \\\\ \n  JHU & 0.99 & 1.00 & 0.98 \\\\ \n  CTP & 0.99 & 0.98 & 1.00 \\\\ \n  Variance & 183940.46 & 188236.24 & 130900.77 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{Correlation and variance of weekly deaths\\label{tab:weekdeathcor}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:47:10 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rllll}\n  \\hline\n & N & Min & Median & Max \\\\ \n  \\hline\nState of emergency & 49 & 2020-02-29 & 2020-03-11 & 2020-03-16 \\\\ \n  Date closed K 12 schools & 49 & 2020-03-13 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed day cares & 14 & 2020-03-16 & 2020-03-23 & 2020-04-06 \\\\ \n  Date banned visitors to nursing homes & 29 & 2020-03-09 & 2020-03-16 & 2020-04-06 \\\\ \n  Closed non essential businesses & 41 & 2020-03-19 & 2020-03-25 & 2020-04-06 \\\\ \n  Closed restaurants except take out & 46 & 2020-03-15 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed gyms & 44 & 2020-03-16 & 2020-03-20 & 2020-04-03 \\\\ \n  Closed movie theaters & 47 & 2020-03-16 & 2020-03-21 & 2020-04-06 \\\\ \n  Stay at home  shelter in place & 40 & 2020-03-19 & 2020-03-28 & 2020-04-07 \\\\ \n  End relax stay at home shelter in place & 36 & 2020-04-24 & 2020-05-15 & 2020-06-19 \\\\ \n  Began to reopen businesses statewide & 48 & 2020-04-20 & 2020-05-06 & 2020-06-05 \\\\ \n  Reopen restaurants & 46 & 2020-04-24 & 2020-05-17 & 2020-06-22 \\\\ \n  Reopened gyms & 42 & 2020-04-24 & 2020-05-18 & 2020-07-03 \\\\ \n  Reopened movie theaters & 35 & 2020-04-27 & 2020-05-30 & 2020-07-03 \\\\ \n  Resumed elective medical procedures & 34 & 2020-04-20 & 2020-04-29 & 2020-05-29 \\\\ \n  Mandate face mask use by all individuals in public spaces & 30 & 2020-04-08 & 2020-06-22 & 2020-07-27 \\\\ \n  Mandate face mask use by employees in public facing businesses & 40 & 2020-04-03 & 2020-05-01 & 2020-07-03 \\\\ \n  Stop Initiation of Evictions overall or due to COVID related issues & 29 & 2020-03-16 & 2020-03-24 & 2020-05-30 \\\\ \n  Stop enforcement of evictions overall or due to COVID related issues & 27 & 2020-03-17 & 2020-03-24 & 2020-06-08 \\\\ \n  Renter grace period or use of security deposit to pay rent & 3 & 2020-04-10 & 2020-04-24 & 2020-05-20 \\\\ \n  Order freezing utility shut offs & 32 & 2020-03-12 & 2020-03-19 & 2020-04-13 \\\\ \n  Froze mortgage payments & 1 & 2020-03-21 & 2020-03-21 & 2020-03-21 \\\\ \n  Waived one week waiting period for unemployment insurance & 35 & 2020-03-08 & 2020-03-18 & 2020-04-06 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{State Policies \\label{tab:policies}} \n\\end{table}\n",
        "% latex table generated in R 4.0.0 by xtable 1.8-4 package\n% Mon Aug  3 10:47:10 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rllll}\n  \\hline\n & N & Min & Median & Max \\\\ \n  \\hline\nDate closed K 12 schools & 49 & 2020-03-13 & 2020-03-17 & 2020-04-03 \\\\ \n  Stay at home  shelter in place & 40 & 2020-03-19 & 2020-03-28 & 2020-04-07 \\\\ \n  Closed movie theaters & 47 & 2020-03-16 & 2020-03-21 & 2020-04-06 \\\\ \n  Closed restaurants except take out & 46 & 2020-03-15 & 2020-03-17 & 2020-04-03 \\\\ \n  Closed non essential businesses & 41 & 2020-03-19 & 2020-03-25 & 2020-04-06 \\\\ \n  Mandate face mask use by employees & 40 & 2020-04-03 & 2020-05-01 & 2020-07-03 \\\\ \n   \\hline\n\\end{tabular}\n\\caption{State Policies \\label{tab:policies_inreg}} \n\\end{table}\n",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/R/dataprep.R\",sep=\"/\"))",
        "Loading data last updated on  2020-07-31 13:17:55 \nRun  /Users/Hiro/Documents/GitHub/covid-impact/cases_and_policies/R/cases_and_policies.R  to update data.\n",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/varlabels.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/regprep.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/generatetables.R\", sep=\"/\"))",
        "> ",
        "source(paste(rootdir,\"cases_and_policies/rmd/bootstrap_felm.R\", sep=\"/\"))",
        "> ",
        "rearrange <- function(x, id) {",
        "+ ",
        "  for (i in unique(id)) {",
        "+ ",
        "    xi <- x[id==i]",
        "+ ",
        "    xi[!is.na(xi)] <- sort(xi[!is.na(xi)])",
        "+ ",
        "    x[id==i] <- xi",
        "+ ",
        "  }",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "dropnotincreasing <- function(x, id, t) {",
        "+ ",
        "  const <- (x <= panellag(x, id, t))",
        "+ ",
        "  const[is.na(const)] <- FALSE",
        "+ ",
        "  x[const & x>0] <- NA",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "lininterp <- function(x, id, t) {",
        "+ ",
        "  for (i in unique(id)) {",
        "+ ",
        "    xi <- x[id==i]",
        "+ ",
        "    ti <- t[id==i]",
        "+ ",
        "    xi[is.na(xi)] <- approx(ti[!is.na(xi)], xi[!is.na(xi)], ti[is.na(xi)])$y",
        "+ ",
        "    x[id==i] <- xi",
        "+ ",
        "  }",
        "+ ",
        "  return(x)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "smoothtests <- function(x, id, t) {",
        "+ ",
        "  x[is.na(x)] <- 0",
        "+ ",
        "  return(lininterp(dropnotincreasing(rearrange(x,id),id,t),id,t))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "df$neg.interp <- smoothtests(df$negative, df$state, df$date)",
        "> ",
        "df$pos.interp <- df$cases #smoothtests(df$positive, df$state, df$date)",
        "> ",
        "df$tot.interp <- df$neg.interp + df$pos.interp",
        "> ",
        "",
        "> ",
        "L <- 7",
        "> ",
        "df$tests <- paneldiff(df$tot.interp, df$state, df$date, lag=L)",
        "> ",
        "df$testrate  <- df$tests/df$Population.2018*1000",
        "> ",
        "df$testrate[df$testrate<0] <- NA",
        "> ",
        "df$dlogtests <- paneldiff(log(sapply(df$testrate, function(x)",
        "+ ",
        "  max(x,exp(-1)))), df$state, df$date, lag=L)",
        "> ",
        "df$testratedc <- df$ddeath/df$dcases*df$testrate",
        "> ",
        "df$testratedc[df$dcases==0] <- 0",
        "> ",
        "",
        "> ",
        "df$tests.ma <- paneldiff(panelma(df$neg.interp, df$state, df$date, 7) + df$cases,",
        "+ ",
        "                         df$state, df$date, lag=L)",
        "> ",
        "df$testrate.ma  <- df$tests.ma/df$Population.2018*1000",
        "> ",
        "df$testrate.ma[df$testrate.ma<0] <- NA",
        "> ",
        "df$dlogtests.ma <- paneldiff(log(sapply(df$testrate.ma, function(x)",
        "+ ",
        "  max(x,exp(-1)))), df$state, df$date, lag=L)",
        "> ",
        "df$testratedc.ma <- df$ddeath/df$dcases*df$testrate.ma",
        "> ",
        "df$testratedc.ma[df$dcases==0] <- 0",
        "> ",
        "",
        "> ",
        "DML2.for.PLM <- function(x, d, y, dreg, yreg, nfold=2) {",
        "+ ",
        "nobs <- nrow(x)",
        "+ ",
        "foldid <- rep.int(1:nfold,times = ceiling(nobs/nfold))[sample.int(nobs)]",
        "+ ",
        "I <- split(1:nobs, foldid)",
        "+ ",
        "ytil <- dtil <- rep(NA, nobs)",
        "+ ",
        "cat(\"fold: \")",
        "+ ",
        "#the following loop builds residuals over the folds",
        "+ ",
        "for(b in 1:length(I)){",
        "+ ",
        "dfit <- dreg(x[-I[[b]],], d[-I[[b]]]) #take a fold out",
        "+ ",
        "yfit <- yreg(x[-I[[b]],], y[-I[[b]]]) # take a folot out",
        "+ ",
        "dhat <- predict(dfit, x[I[[b]],], type=\"response\") #predict the fold out",
        "+ ",
        "yhat <- predict(yfit, x[I[[b]],], type=\"response\") #predict the fold out",
        "+ ",
        "dtil[I[[b]]] <- (d[I[[b]]] - dhat) #record residual",
        "+ ",
        "ytil[I[[b]]] <- (y[I[[b]]] - yhat) #record residial",
        "+ ",
        "cat(b,\" \")",
        "+ ",
        "}",
        "+ ",
        "rfit <- lm(ytil ~ dtil) #estimate the main parameter by regressing one residual on the other",
        "+ ",
        "coef.est <- coef(rfit)[2] #extract coefficient",
        "+ ",
        "se <- sqrt(vcovHC(rfit)[2,2]) #record standard error",
        "+ ",
        "cat(sprintf(\"\\ncoef (se) = %g (%g)\\n\", coef.est , se))",
        "+ ",
        "return( list(coef.est =coef.est , se=se, dtil=dtil, ytil=ytil) )",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "library(AER,hdm, randomForest)",
        "Error in library(AER, hdm, randomForest) : \n  object 'randomForest' not found\n",
        "\nRestarting R session...\n\n"
    ]
}