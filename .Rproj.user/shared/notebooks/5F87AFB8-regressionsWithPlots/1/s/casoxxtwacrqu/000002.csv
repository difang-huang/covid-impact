"0","rearrange <- function(x, id) {"
"0","  for (i in unique(id)) {"
"0","    xi <- x[id==i]"
"0","    xi[!is.na(xi)] <- sort(xi[!is.na(xi)])"
"0","    x[id==i] <- xi"
"0","  }"
"0","  return(x)"
"0","}"
"0",""
"0",""
"0","dropnotincreasing <- function(x, id, t) {"
"0","  const <- (x <= panellag(x, id, t))"
"0","  const[is.na(const)] <- FALSE"
"0","  x[const & x>0] <- NA"
"0","  return(x)"
"0","}"
"0",""
"0","lininterp <- function(x, id, t) {"
"0","  for (i in unique(id)) {"
"0","    xi <- x[id==i]"
"0","    ti <- t[id==i]"
"0","    xi[is.na(xi)] <- approx(ti[!is.na(xi)], xi[!is.na(xi)], ti[is.na(xi)])$y"
"0","    x[id==i] <- xi"
"0","  }"
"0","  return(x)"
"0","}"
"0",""
"0",""
"0","smoothtests <- function(x, id, t) {"
"0","  x[is.na(x)] <- 0"
"0","  return(lininterp(dropnotincreasing(rearrange(x,id),id,t),id,t))"
"0","}"
"0",""
"0","df$neg.interp <- smoothtests(df$negative, df$state, df$date)"
"0","df$pos.interp <- df$cases #smoothtests(df$positive, df$state, df$date)"
"0","df$tot.interp <- df$neg.interp + df$pos.interp"
"0",""
"0","L <- 7"
"0","df$tests <- paneldiff(df$tot.interp, df$state, df$date, lag=L)"
"0","df$testrate  <- df$tests/df$Population.2018*1000"
"0","df$testrate[df$testrate<0] <- NA"
"0","df$dlogtests <- paneldiff(log(sapply(df$testrate, function(x)"
"0","  max(x,exp(-1)))), df$state, df$date, lag=L)"
"0","df$testratedc <- df$ddeath/df$dcases*df$testrate"
"0","df$testratedc[df$dcases==0] <- 0"
"0",""
"0","df$tests.ma <- paneldiff(panelma(df$neg.interp, df$state, df$date, 7) + df$cases,"
"0","                         df$state, df$date, lag=L)"
"0","df$testrate.ma  <- df$tests.ma/df$Population.2018*1000"
"0","df$testrate.ma[df$testrate.ma<0] <- NA"
"0","df$dlogtests.ma <- paneldiff(log(sapply(df$testrate.ma, function(x)"
"0","  max(x,exp(-1)))), df$state, df$date, lag=L)"
"0","df$testratedc.ma <- df$ddeath/df$dcases*df$testrate.ma"
"0","df$testratedc.ma[df$dcases==0] <- 0"
